{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCMA,IAAK,IAJC,EAAO,SAAS,gBAAgB,CAAC,MAEjC,EAmBe,AATC,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,EAXa,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,EAAA,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,EAAA,I,A,W,M,A,U,wI,G,EAWF,IAAI,CACjC,SAAC,CAAA,CAAG,CADN,EAEI,OAAA,EAAgB,EAAE,OAAO,CAAC,MAAM,EAAI,EAAgB,EAAE,OAAO,CAAC,MAAM,C,GAOvC,GAAG,CAAC,SAAC,CAAtC,EACE,MAAO,CACL,KAAM,EAAK,SAAS,CACpB,SAAU,EAAK,OAAO,CAAC,QAAQ,CAC/B,OAAQ,EAAK,OAAO,CAAC,MAAM,CAC3B,IAAK,EAAK,OAAO,CAAC,GAAG,AACvB,CACF,GAxBO,EAAI,EAAG,EAAI,EAAK,MAAM,CAAE,IAC/B,CAAI,CAAC,EAAE,CAAC,SAAS,CAAG,CAAgB,CAAC,EAAE,CAAC,IAAI,CAC5C,CAAI,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAG,CAAgB,CAAC,EAAE,CAAC,QAAQ,CACvD,CAAI,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,CAAG,CAAgB,CAAC,EAAE,CAAC,MAAM,CACnD,CAAI,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAG,CAAgB,CAAC,EAAE,CAAC,GAAG,CAyB/C,SAAS,EAAgB,CAAI,EAG3B,OAAO,SAFS,EAAK,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,GAGjD","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar list = document.querySelectorAll(\"li\");\nvar newSortedList = sortlist(_to_consumable_array(list));\nvar newlistEmployees = getEmployees(newSortedList);\nfor(var i = 0; i < list.length; i++){\n    list[i].innerHTML = newlistEmployees[i].name;\n    list[i].dataset.position = newlistEmployees[i].position;\n    list[i].dataset.salary = newlistEmployees[i].salary;\n    list[i].dataset.age = newlistEmployees[i].age;\n}\nfunction sortlist(sortedList) {\n    var sortingList = sortedList.sort(function(a, b) {\n        return convertToNumber(b.dataset.salary) - convertToNumber(a.dataset.salary);\n    });\n    return sortingList;\n}\nfunction getEmployees(listEmployees) {\n    var newlistEml = listEmployees.map(function(item) {\n        return {\n            name: item.innerText,\n            position: item.dataset.position,\n            salary: item.dataset.salary,\n            age: item.dataset.age\n        };\n    });\n    return newlistEml;\n}\nfunction convertToNumber(item) {\n    var newItem = item.split(\",\").join(\"\").slice(1);\n    return parseInt(newItem);\n}\n\n//# sourceMappingURL=index.b4081f3d.js.map\n","'use strict';\n\nconst list = document.querySelectorAll('li');\nconst newSortedList = sortlist([...list]);\nconst newlistEmployees = getEmployees(newSortedList);\n\nfor (let i = 0; i < list.length; i++) {\n  list[i].innerHTML = newlistEmployees[i].name;\n  list[i].dataset.position = newlistEmployees[i].position;\n  list[i].dataset.salary = newlistEmployees[i].salary;\n  list[i].dataset.age = newlistEmployees[i].age;\n}\n\nfunction sortlist(sortedList) {\n  const sortingList = sortedList.sort(\n    (a, b) =>\n      convertToNumber(b.dataset.salary) - convertToNumber(a.dataset.salary),\n  );\n\n  return sortingList;\n}\n\nfunction getEmployees(listEmployees) {\n  const newlistEml = listEmployees.map((item) => {\n    return {\n      name: item.innerText,\n      position: item.dataset.position,\n      salary: item.dataset.salary,\n      age: item.dataset.age,\n    };\n  });\n\n  return newlistEml;\n}\n\nfunction convertToNumber(item) {\n  const newItem = item.split(',').join('').slice(1);\n\n  return parseInt(newItem);\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","list","document","querySelectorAll","newlistEmployees","listEmployees","sortedList","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","sort","a","b","convertToNumber","dataset","salary","map","item","innerText","position","age","innerHTML","parseInt","split","join"],"version":3,"file":"index.b4081f3d.js.map"}